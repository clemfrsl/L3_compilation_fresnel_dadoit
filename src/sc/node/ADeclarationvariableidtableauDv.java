/* This file was generated by SableCC (http://www.sablecc.org/). */

package sc.node;

import sc.analysis.*;

@SuppressWarnings("nls")
public final class ADeclarationvariableidtableauDv extends PDv
{
    private PTv _tv_;
    private TIdentif _identif_;
    private TCrochetgauche _crochetgauche_;
    private TNombre _nombre_;
    private TCrochetdroit _crochetdroit_;

    public ADeclarationvariableidtableauDv()
    {
        // Constructor
    }

    public ADeclarationvariableidtableauDv(
        @SuppressWarnings("hiding") PTv _tv_,
        @SuppressWarnings("hiding") TIdentif _identif_,
        @SuppressWarnings("hiding") TCrochetgauche _crochetgauche_,
        @SuppressWarnings("hiding") TNombre _nombre_,
        @SuppressWarnings("hiding") TCrochetdroit _crochetdroit_)
    {
        // Constructor
        setTv(_tv_);

        setIdentif(_identif_);

        setCrochetgauche(_crochetgauche_);

        setNombre(_nombre_);

        setCrochetdroit(_crochetdroit_);

    }

    @Override
    public Object clone()
    {
        return new ADeclarationvariableidtableauDv(
            cloneNode(this._tv_),
            cloneNode(this._identif_),
            cloneNode(this._crochetgauche_),
            cloneNode(this._nombre_),
            cloneNode(this._crochetdroit_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseADeclarationvariableidtableauDv(this);
    }

    public PTv getTv()
    {
        return this._tv_;
    }

    public void setTv(PTv node)
    {
        if(this._tv_ != null)
        {
            this._tv_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._tv_ = node;
    }

    public TIdentif getIdentif()
    {
        return this._identif_;
    }

    public void setIdentif(TIdentif node)
    {
        if(this._identif_ != null)
        {
            this._identif_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._identif_ = node;
    }

    public TCrochetgauche getCrochetgauche()
    {
        return this._crochetgauche_;
    }

    public void setCrochetgauche(TCrochetgauche node)
    {
        if(this._crochetgauche_ != null)
        {
            this._crochetgauche_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._crochetgauche_ = node;
    }

    public TNombre getNombre()
    {
        return this._nombre_;
    }

    public void setNombre(TNombre node)
    {
        if(this._nombre_ != null)
        {
            this._nombre_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._nombre_ = node;
    }

    public TCrochetdroit getCrochetdroit()
    {
        return this._crochetdroit_;
    }

    public void setCrochetdroit(TCrochetdroit node)
    {
        if(this._crochetdroit_ != null)
        {
            this._crochetdroit_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._crochetdroit_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._tv_)
            + toString(this._identif_)
            + toString(this._crochetgauche_)
            + toString(this._nombre_)
            + toString(this._crochetdroit_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._tv_ == child)
        {
            this._tv_ = null;
            return;
        }

        if(this._identif_ == child)
        {
            this._identif_ = null;
            return;
        }

        if(this._crochetgauche_ == child)
        {
            this._crochetgauche_ = null;
            return;
        }

        if(this._nombre_ == child)
        {
            this._nombre_ = null;
            return;
        }

        if(this._crochetdroit_ == child)
        {
            this._crochetdroit_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._tv_ == oldChild)
        {
            setTv((PTv) newChild);
            return;
        }

        if(this._identif_ == oldChild)
        {
            setIdentif((TIdentif) newChild);
            return;
        }

        if(this._crochetgauche_ == oldChild)
        {
            setCrochetgauche((TCrochetgauche) newChild);
            return;
        }

        if(this._nombre_ == oldChild)
        {
            setNombre((TNombre) newChild);
            return;
        }

        if(this._crochetdroit_ == oldChild)
        {
            setCrochetdroit((TCrochetdroit) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
