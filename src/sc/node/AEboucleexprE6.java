/* This file was generated by SableCC (http://www.sablecc.org/). */

package sc.node;

import sc.analysis.*;

@SuppressWarnings("nls")
public final class AEboucleexprE6 extends PE6
{
    private TParenthesegauche _parenthesegauche_;
    private PExp _exp_;
    private TParenthesedroite _parenthesedroite_;

    public AEboucleexprE6()
    {
        // Constructor
    }

    public AEboucleexprE6(
        @SuppressWarnings("hiding") TParenthesegauche _parenthesegauche_,
        @SuppressWarnings("hiding") PExp _exp_,
        @SuppressWarnings("hiding") TParenthesedroite _parenthesedroite_)
    {
        // Constructor
        setParenthesegauche(_parenthesegauche_);

        setExp(_exp_);

        setParenthesedroite(_parenthesedroite_);

    }

    @Override
    public Object clone()
    {
        return new AEboucleexprE6(
            cloneNode(this._parenthesegauche_),
            cloneNode(this._exp_),
            cloneNode(this._parenthesedroite_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAEboucleexprE6(this);
    }

    public TParenthesegauche getParenthesegauche()
    {
        return this._parenthesegauche_;
    }

    public void setParenthesegauche(TParenthesegauche node)
    {
        if(this._parenthesegauche_ != null)
        {
            this._parenthesegauche_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._parenthesegauche_ = node;
    }

    public PExp getExp()
    {
        return this._exp_;
    }

    public void setExp(PExp node)
    {
        if(this._exp_ != null)
        {
            this._exp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._exp_ = node;
    }

    public TParenthesedroite getParenthesedroite()
    {
        return this._parenthesedroite_;
    }

    public void setParenthesedroite(TParenthesedroite node)
    {
        if(this._parenthesedroite_ != null)
        {
            this._parenthesedroite_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._parenthesedroite_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._parenthesegauche_)
            + toString(this._exp_)
            + toString(this._parenthesedroite_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._parenthesegauche_ == child)
        {
            this._parenthesegauche_ = null;
            return;
        }

        if(this._exp_ == child)
        {
            this._exp_ = null;
            return;
        }

        if(this._parenthesedroite_ == child)
        {
            this._parenthesedroite_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._parenthesegauche_ == oldChild)
        {
            setParenthesegauche((TParenthesegauche) newChild);
            return;
        }

        if(this._exp_ == oldChild)
        {
            setExp((PExp) newChild);
            return;
        }

        if(this._parenthesedroite_ == oldChild)
        {
            setParenthesedroite((TParenthesedroite) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
