/* This file was generated by SableCC (http://www.sablecc.org/). */

package sc.node;

import sc.analysis.*;

@SuppressWarnings("nls")
public final class AEgalE2 extends PE2
{
    private PE2 _e2_;
    private TEgal _egal_;
    private PE3 _e3_;

    public AEgalE2()
    {
        // Constructor
    }

    public AEgalE2(
        @SuppressWarnings("hiding") PE2 _e2_,
        @SuppressWarnings("hiding") TEgal _egal_,
        @SuppressWarnings("hiding") PE3 _e3_)
    {
        // Constructor
        setE2(_e2_);

        setEgal(_egal_);

        setE3(_e3_);

    }

    @Override
    public Object clone()
    {
        return new AEgalE2(
            cloneNode(this._e2_),
            cloneNode(this._egal_),
            cloneNode(this._e3_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAEgalE2(this);
    }

    public PE2 getE2()
    {
        return this._e2_;
    }

    public void setE2(PE2 node)
    {
        if(this._e2_ != null)
        {
            this._e2_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._e2_ = node;
    }

    public TEgal getEgal()
    {
        return this._egal_;
    }

    public void setEgal(TEgal node)
    {
        if(this._egal_ != null)
        {
            this._egal_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._egal_ = node;
    }

    public PE3 getE3()
    {
        return this._e3_;
    }

    public void setE3(PE3 node)
    {
        if(this._e3_ != null)
        {
            this._e3_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._e3_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._e2_)
            + toString(this._egal_)
            + toString(this._e3_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._e2_ == child)
        {
            this._e2_ = null;
            return;
        }

        if(this._egal_ == child)
        {
            this._egal_ = null;
            return;
        }

        if(this._e3_ == child)
        {
            this._e3_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._e2_ == oldChild)
        {
            setE2((PE2) newChild);
            return;
        }

        if(this._egal_ == oldChild)
        {
            setEgal((TEgal) newChild);
            return;
        }

        if(this._e3_ == oldChild)
        {
            setE3((PE3) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
