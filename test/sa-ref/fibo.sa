<programme type="SaProg">
 <fonctions type="SaLDecFonc">
  <tete type="SaDecFonc" nom="fibo" typeRetour="entier">
   <parametres type="SaLDecVar">
    <tete type="SaDecVarSimple" nom="n" typeVariable="entier"/>
   </parametres>
   <corps type="SaInstBloc">
    <val type="SaLInst">
     <tete type="SaInstSi">
      <test type="SaExpInf">
       <op1 type="SaExpVar">
        <var type="SaVarSimple" nom="n"/>
       </op1>
       <op2 type="SaExpInt" val="2"/>
      </test>
      <alors type="SaInstBloc">
       <val type="SaLInst">
        <tete type="SaInstRetour">
         <val type="SaExpInt" val="1"/>
        </tete>
       </val>
      </alors>
      <sinon type="SaInstBloc">
       <val type="SaLInst">
        <tete type="SaInstRetour">
         <val type="SaExpAdd">
          <op1 type="SaExpAppel">
           <val type="SaAppel" nom="fibo">
            <arguments type="SaLExp">
             <tete type="SaExpSub">
              <op1 type="SaExpVar">
               <var type="SaVarSimple" nom="n"/>
              </op1>
              <op2 type="SaExpInt" val="1"/>
             </tete>
            </arguments>
           </val>
          </op1>
          <op2 type="SaExpAppel">
           <val type="SaAppel" nom="fibo">
            <arguments type="SaLExp">
             <tete type="SaExpSub">
              <op1 type="SaExpVar">
               <var type="SaVarSimple" nom="n"/>
              </op1>
              <op2 type="SaExpInt" val="2"/>
             </tete>
            </arguments>
           </val>
          </op2>
         </val>
        </tete>
       </val>
      </sinon>
     </tete>
    </val>
   </corps>
  </tete>
  <queue type="SaLDecFonc">
   <tete type="SaDecFonc" nom="main" typeRetour="nul">
    <corps type="SaInstBloc">
     <val type="SaLInst">
      <tete type="SaInstEcriture">
       <arg type="SaExpAppel">
        <val type="SaAppel" nom="fibo">
         <arguments type="SaLExp">
          <tete type="SaExpInt" val="9"/>
         </arguments>
        </val>
       </arg>
      </tete>
     </val>
    </corps>
   </tete>
  </queue>
 </fonctions>
</programme>
